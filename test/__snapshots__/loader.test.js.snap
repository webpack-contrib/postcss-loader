// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check postcss versions to avoid using PostCSS 7 should emit a warning if postcss version is not explicitly specified when the loader is failed: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Something went wrong.",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should emit a warning if postcss version is not explicitly specified when the loader is failed: warnings 1`] = `
[
  "ModuleWarning: Module Warning (from \`replaced original path\`):
Add postcss as project dependency. postcss is not a peer dependency for postcss-loader. Use \`npm install postcss\` or \`yarn add postcss\`",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'package.json' file was not found: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Something went wrong.",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'package.json' file was not found: warnings 1`] = `[]`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'postcss' version is explicitly defined in 'dependencies': errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Something went wrong.",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'postcss' version is explicitly defined in 'dependencies': warnings 1`] = `[]`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'postcss' version is explicitly defined in 'devDependencies': errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Something went wrong.",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should not show a warning if 'postcss' version is explicitly defined in 'devDependencies': warnings 1`] = `[]`;

exports[`check postcss versions to avoid using PostCSS 7 should work when 'processor' throw an error: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Error in implementation",
]
`;

exports[`check postcss versions to avoid using PostCSS 7 should work when 'processor' throw an error: warnings 1`] = `[]`;

exports[`loader should emit asset using the "messages" API: errors 1`] = `[]`;

exports[`loader should emit asset using the "messages" API: warnings 1`] = `[]`;

exports[`loader should emit warning using the "messages" API: css 1`] = `
"a {
  color: black;
}

a {
  color: red;
}

a {
  color: green;
}

a {
  color: blue;
}

.class {
  -x-border-color: blue blue *;
  -x-color: * #fafafa;
}

.class-foo {
  -z-border-color: blue blue *;
  -z-color: * #fafafa;
}

.phone {
  &_title {
    width: 500px;

    @media (max-width: 500px) {
      width: auto;
    }

    body.is_dark & {
      color: white;
    }
  }

  img {
    display: block;
  }
}
"
`;

exports[`loader should emit warning using the "messages" API: errors 1`] = `[]`;

exports[`loader should emit warning using the "messages" API: warnings 1`] = `
[
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(10:3) from "postcss-plugin" plugin: <Message>

Code:
  color: green
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(14:3) from "postcss-plugin" plugin: <Message>

Code:
  color: blue
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(18:3) from "postcss-plugin" plugin: <Message>

Code:
  -x-border-color: blue blue *
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(19:3) from "postcss-plugin" plugin: <Message>

Code:
  -x-color: * #fafafa
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(23:3) from "postcss-plugin" plugin: <Message>

Code:
  -z-border-color: blue blue *
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(24:3) from "postcss-plugin" plugin: <Message>

Code:
  -z-color: * #fafafa
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(29:5) from "postcss-plugin" plugin: <Message>

Code:
  width: 500px
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(2:3) from "postcss-plugin" plugin: <Message>

Code:
  color: black
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(32:7) from "postcss-plugin" plugin: <Message>

Code:
  width: auto
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(36:7) from "postcss-plugin" plugin: <Message>

Code:
  color: white
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(41:5) from "postcss-plugin" plugin: <Message>

Code:
  display: block
",
  "ModuleWarning: Module Warning (from \`replaced original path\`):
(6:3) from "postcss-plugin" plugin: <Message>

Code:
  color: red
",
]
`;

exports[`loader should register dependencies using the "messages" API: errors 1`] = `[]`;

exports[`loader should register dependencies using the "messages" API: warnings 1`] = `[]`;

exports[`loader should reuse PostCSS AST: css 1`] = `
"a {
  color: black;
}

a {
  color: red;
}

a {
  color: green;
}

a {
  color: blue;
}

.class {
  -x-border-color: blue blue *;
  -x-color: * #fafafa;
}

.class-foo {
  -z-border-color: blue blue *;
  -z-color: * #fafafa;
}

.phone {
  &_title {
    width: 500px;

    @media (max-width: 500px) {
      width: auto;
    }

    body.is_dark & {
      color: white;
    }
  }

  img {
    display: block;
  }
}
"
`;

exports[`loader should reuse PostCSS AST: errors 1`] = `[]`;

exports[`loader should reuse PostCSS AST: warnings 1`] = `[]`;

exports[`loader should throw an error on invalid syntax: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):

SyntaxError

(1:3) /test/fixtures/css/style.css Unnecessary curly bracket

> 1 | a {
    |   ^
  2 |   color: black;
  3 | }
",
]
`;

exports[`loader should throw an error on invalid syntax: warnings 1`] = `[]`;

exports[`loader should work with SugarSS: css 1`] = `
"a {
  color: black
}
"
`;

exports[`loader should work with SugarSS: errors 1`] = `[]`;

exports[`loader should work with SugarSS: warnings 1`] = `[]`;

exports[`loader should work: css 1`] = `
"a {
  color: black;
}

a {
  color: red;
}

a {
  color: green;
}

a {
  color: blue;
}

.class {
  -x-border-color: blue blue *;
  -x-color: * #fafafa;
}

.class-foo {
  -z-border-color: blue blue *;
  -z-color: * #fafafa;
}

.phone {
  &_title {
    width: 500px;

    @media (max-width: 500px) {
      width: auto;
    }

    body.is_dark & {
      color: white;
    }
  }

  img {
    display: block;
  }
}
"
`;

exports[`loader should work: errors 1`] = `[]`;

exports[`loader should work: warnings 1`] = `[]`;
